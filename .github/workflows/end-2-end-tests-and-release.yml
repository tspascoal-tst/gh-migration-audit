name: End to End tests and release
on:
  workflow_run:
    workflows:
      - "CI"
    types:
      - completed

permissions:
  contents: read
  checks: write

jobs:
  end_to_end_tests_macos:
    name: Run end to end tests (macOS)
    runs-on: macos-latest
    env:
      check_name: Integration Tests macOS

    steps:

      - name: Download macOS binary
        uses: dawidd6/action-download-artifact@268677152d06ba59fcec7a7f0b5d961b6ccd7e1e
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: package-macos
          path: bin

      - name: Create `output` directory
        run: mkdir output
      - name: Make macOS binary executable
        run: chmod +x bin/gh-migration-audit-darwin-amd64
      - name: Audit a single repo
        run: ./bin/gh-migration-audit-darwin-amd64 audit-repo --owner gh-migration-audit-sandbox --repo second-repo-with-actions-variables --output-path output/audit-repo.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Audit repos owned by an organization
        run: ./bin/gh-migration-audit-darwin-amd64 audit-all --owner gh-migration-audit-sandbox --output-path output/audit-all.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Create input CSV for audit-repos
        run: |
          echo "owner,name
          gh-migration-audit-sandbox,second-repo-with-actions-variables" > input.csv
      - name: Print input CSV
        run: cat input.csv
      - name: Audit specific repos from input CSV
        run: ./bin/gh-migration-audit-darwin-amd64 audit-repos --input-path input.csv --output-path output/audit-repos.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Upload macOS binary as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-outputs
          path: output
      - name: get sha
        id: get-sha
        if: always()
        run: |
          sha='${{ github.sha }}'
          if [ '${{ github.event.workflow_run.event }}' = 'pull_request' ]; then
            sha='${{ github.event.workflow_run.event.pull_request.head.sha}}'
          else
            sha='${{ github.event.workflow_run.event.push.after}}'
          fi
          echo -n "$sha" >> "$GITHUB_OUTPUT"
      - name: Set Status Check for ${{ steps.get-sha.outputs.sha }}
        uses: LouisBrunner/checks-action@c6dbaea4f9c79ccfe67c038acddaf713518b255d
        if: always()
        with:
          sha: ${{ steps.get-sha.outputs.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}
  
  end_to_end_tests_linux:
    name: Run end to end tests (Linux)
    runs-on: ubuntu-latest
    env:
      check_name: Integration Tests Linux

    steps:
      - name: Download Linux binary
        uses: dawidd6/action-download-artifact@268677152d06ba59fcec7a7f0b5d961b6ccd7e1e
        with:
           run_id: ${{ github.event.workflow_run.id }}
           name: package-linux
           path: bin

      - name: Create `output` directory
        run: mkdir output
      - name: Make Linux binary executable
        run: chmod +x bin/gh-migration-audit-linux-amd64
      - name: Audit a single repo
        run: ./bin/gh-migration-audit-linux-amd64 audit-repo --owner gh-migration-audit-sandbox --repo second-repo-with-actions-variables --output-path output/audit-repo.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Audit repos owned by an organization
        run: ./bin/gh-migration-audit-linux-amd64 audit-all --owner gh-migration-audit-sandbox --output-path output/audit-all.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Create input CSV for audit-repos
        run: |
          echo "owner,name
          gh-migration-audit-sandbox,second-repo-with-actions-variables" > input.csv
      - name: Print input CSV
        run: cat input.csv
      - name: Audit specific repos from input CSV
        run: ./bin/gh-migration-audit-linux-amd64 audit-repos --input-path input.csv --output-path output/audit-repos.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Upload outputs as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-outputs
          path: output
      - name: get sha
        id: get-sha
        if: always()
        run: |
          sha='${{ github.sha }}'
          if [ '${{ github.event.workflow_run.event }}' = 'pull_request' ]; then
            sha='${{ github.event.workflow_run.event.pull_request.head.sha}}'
          else
            sha='${{ github.event.workflow_run.event.push.after}}'
          fi
          echo -n "$sha" >> "$GITHUB_OUTPUT"
      - name: Set Status Check for ${{ steps.get-sha.outputs.sha }}
        uses: LouisBrunner/checks-action@c6dbaea4f9c79ccfe67c038acddaf713518b255d
        if: always()
        with:
          sha: ${{ steps.get-sha.outputs.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}

  end_to_end_tests_windows:
    name: Run end to end tests (Windows)
    runs-on: windows-latest
    env:
      check_name: Integration Tests Windows

    steps:
      - name: Download Windows binary
        uses: dawidd6/action-download-artifact@268677152d06ba59fcec7a7f0b5d961b6ccd7e1e
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: package-windows
          path: bin
      - name: Create `output` directory
        run: mkdir output
      - name: Audit a single repo
        run: bin/gh-migration-audit-windows-amd64.exe audit-repo --owner gh-migration-audit-sandbox --repo second-repo-with-actions-variables --output-path output/audit-repo.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Audit repos owned by an organization
        run: bin/gh-migration-audit-windows-amd64.exe audit-all --owner gh-migration-audit-sandbox --output-path output/audit-all.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Create input CSV for audit-repos
        run: |
          echo "owner,name
          gh-migration-audit-sandbox,second-repo-with-actions-variables" > input.csv
      - name: Print input CSV
        run: cat input.csv
      - name: Audit specific repos from input CSV
        run: bin/gh-migration-audit-windows-amd64.exe audit-repos --input-path input.csv --output-path output/audit-repos.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Upload outputs as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-outputs
          path: output
      - name: get sha
        id: get-sha
        if: always()
        run: |
          sha='${{ github.sha }}'
          if [ '${{ github.event.workflow_run.event }}' = 'pull_request' ]; then
            sha='${{ github.event.workflow_run.event.pull_request.head.sha}}'
          else
            sha='${{ github.event.workflow_run.event.push.after}}'
          fi
          echo -n "$sha" >> "$GITHUB_OUTPUT"
      - name: Set Status Check for ${{ steps.get-sha.outputs.sha }}
        uses: LouisBrunner/checks-action@c6dbaea4f9c79ccfe67c038acddaf713518b255d
        if: always()
        with:
          sha: ${{ steps.get-sha.outputs.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}
